/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/fatal/reflection.h>

#include <fatal/type/list.h>
#include <fatal/type/pair.h>
#include <fatal/type/sequence.h>

#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/reflection_types.h"
namespace cpp2 {

namespace thrift_fatal_impl_detail {

struct cpp2_reflection__unique_strings_list {
  using ReflectionStruct = ::fatal::sequence<char, 'R', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'r', 'u', 'c', 't'>;
  using fieldA = ::fatal::sequence<char, 'f', 'i', 'e', 'l', 'd', 'A'>;
  using reflection = ::fatal::sequence<char, 'r', 'e', 'f', 'l', 'e', 'c', 't', 'i', 'o', 'n'>;
};

} // thrift_fatal_impl_detail
class reflection_tags {
  struct cpp2_reflection__unique_languages_list {
  };

  struct cpp2_reflection__unique_enums_list {
  };

  struct cpp2_reflection__unique_unions_list {
  };

  struct cpp2_reflection__unique_structs_list {
    using ReflectionStruct = thrift_fatal_impl_detail::cpp2_reflection__unique_strings_list::ReflectionStruct;
  };

  struct cpp2_reflection__unique_constants_list {
  };

  struct cpp2_reflection__unique_services_list {
  };

public:
  struct module {};

  using languages = cpp2_reflection__unique_languages_list;
  using enums = cpp2_reflection__unique_enums_list;
  using unions = cpp2_reflection__unique_unions_list;
  using structs = cpp2_reflection__unique_structs_list;
  using constants = cpp2_reflection__unique_constants_list;
  using services = cpp2_reflection__unique_services_list;

  using strings = thrift_fatal_impl_detail::cpp2_reflection__unique_strings_list;
};

THRIFT_REGISTER_REFLECTION_METADATA(
  reflection_tags::module,
  thrift_fatal_impl_detail::cpp2_reflection__unique_strings_list::reflection,
  // languages
  ::fatal::list<
  >,
  // enums
  ::fatal::list<
  >,
  // unions
  ::fatal::list<
  >,
  // structs
  ::fatal::list<
    ::fatal::pair<ReflectionStruct, thrift_fatal_impl_detail::cpp2_reflection__unique_strings_list::ReflectionStruct>
  >,
  // constants
  ::fatal::list<
  >,
  // services
  ::fatal::list<
  >
);

} // cpp2
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/reflection_fatal_types.h"
