#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
import typing as t

from thrift import Thrift
from thrift.protocol.TProtocol import TProtocolBase

import simple.dependent.ttypes
from simple.example.ttypes import *


class Iface: ...  # EmptyService

class Client(Iface, t.ContextManager): ...  # EmptyService

class Processor(Iface, Thrift.TProcessor):  # EmptyService
    def __init__(self, handler: Iface) -> None:
        self._handler: Iface
        self._onewayMethods: t.Sequence[t.Callable]
        self._processMap: t.Dict[str, t.Callable]

    def process_main(self, iprot: TProtocolBase, oprot: TProtocolBase, server_ctx: t.Any = ...) -> t.Optional[bool]: ...
    def onewayMethods(self) -> t.Tuple[t.Callable]: ...
