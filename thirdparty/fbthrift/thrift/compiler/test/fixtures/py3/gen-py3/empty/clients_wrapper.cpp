/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include <src/gen-py3/empty/clients_wrapper.h>

namespace cpp2 {


NullServiceClientWrapper::NullServiceClientWrapper(
    std::shared_ptr<cpp2::NullServiceAsyncClient> async_client,
    std::shared_ptr<apache::thrift::RequestChannel> channel) : 
    async_client(async_client),
      channel_(channel) {}

NullServiceClientWrapper::~NullServiceClientWrapper() {}

folly::Future<folly::Unit> NullServiceClientWrapper::disconnect() {
  return folly::via(
    this->async_client->getChannel()->getEventBase(),
    [this] { disconnectInLoop(); });
}

void NullServiceClientWrapper::disconnectInLoop() {
    channel_.reset();
    async_client.reset();
}

void NullServiceClientWrapper::setPersistentHeader(const std::string& key, const std::string& value) {
    auto headerChannel = async_client->getHeaderChannel();
    if (headerChannel != nullptr) {
        headerChannel->setPersistentHeader(key, value);
    }
}



} // namespace cpp2
